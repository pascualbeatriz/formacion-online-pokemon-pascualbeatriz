{"version":3,"sources":["components/ListPokemons/CardPokemon/index.js","components/ListPokemons/index.js","components/Filters/index.js","components/Home/index.js","components/PokeDetail/index.js","App.js","services/Fetch.js","index.js"],"names":["CardPokemon","props","name","image","types","pokemonEvolution","className","src","alt","ListPokemons","pokemons","query","filter","pokeName","toUpperCase","includes","map","pokemon","key","id","to","Filters","getUserquery","htmlFor","type","onChange","value","Home","PokeDetail","routerProps","parseInt","match","params","nombre","App","state","bind","this","getPokemons","getEvol","event","gapText","currentTarget","setState","fetch","then","response","json","data","results","pokemonList","url","pokemonData","arrTypes","pokemonType","push","pokemonInf","sprites","front_default","responseEvol","dataEvolutionPoke","evolution","responseEvolPoke","evolData","pokemonEvolutionData","chain","species","evolutionOne","evolves_to","console","log","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.69b8f83b.chunk.js","sourcesContent":["import React from 'react';\n\nconst CardPokemon = props => {\nconst {name,image,types, pokemonEvolution} = props; \n  return(\n    <div className=\"container__pokemon\">\n      <p className=\"poke__name\">{name}</p>\n      <img src={image} alt={name} className=\"poke__img\"/>\n      <p className=\"poke__name\">{`${types[0]} ${types[1]}`}</p>\n    </div>\n);\n};\n\n\nexport default CardPokemon;","import React from 'react';\nimport CardPokemon from './CardPokemon';\nimport {Link} from 'react-router-dom';\n\n\nconst ListPokemons = props => {\nconst {pokemons, pokemonEvolution, query} = props;\n  return (\n    <ul className=\"pokemon__list\">\n    {pokemons\n      .filter(pokeName =>(pokeName.name.toUpperCase().includes(query.toUpperCase())))\n      .map(pokemon =>(\n        <li className=\"pokemon__item\" key={pokemon.id}>\n          <Link to={`/poke-detail/${pokemon.id}`} className=\"pokemon__List-link\">\n          <CardPokemon\n          pokemonEvolution = {pokemonEvolution}\n          name = {pokemon.name}\n          image = {pokemon.image}\n          types = {pokemon.types}\n          />\n          </Link>\n        </li>\n      ))\n    } \n    </ul>\n  )\n}; \n\nexport default ListPokemons;","import React from 'react';\n\nconst Filters = props => {\nconst {getUserquery, query} = props;  \n  return (\n  <label htmlFor=\"intro__name\" className=\"filter_name\"> \n    <input id= \"intro__name\" type=\"text\" className=\"intro__name\" onChange={getUserquery} value={query}/>\n  </label>  \n\n  );\n};\n\nexport default Filters;","import React, {Fragment} from 'react';\nimport ListPokemons from '../ListPokemons';\nimport Filters from '../Filters';\n\nconst Home = props => {\n  const {pokemons,query,getUserquery} = props;\n    return (\n      <Fragment>\n     \n        <Filters\n          getUserquery = {getUserquery}\n          query = {query}\n          />\n             \n          <ListPokemons\n          pokemons = {pokemons}\n          query = {query}\n          /> \n      </Fragment>\n    );\n};\n\n\n\nexport default Home;","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst PokeDetail = props => {\n  const {routerProps, pokemons, pokemonEvolution} = props;\n  const getId = parseInt(routerProps.match.params.id);\n  // let pokemonDetail = pokemonEvolution.filter(pokemonDetail => pokemonDetail.id === getId);\n \n\n    return(\n      <Fragment>\n        <Link to=\"/\" className=\"listpokemons-Home-link\"> Volver </Link>\n        <ul className=\"detail__pokemon\">\n          \n          <li className=\"detail__pokemon-name\">\n            <p className=\"name\">Hola</p>\n            <p className=\"detail-status\">{`name: ${pokemonEvolution.nombre}`}</p>\n            {/* <p className=\"detail-species\">{`Species: ${species}`}</p>\n            <p className=\"detail-origen\">{`Origin: ${origin.name}`}</p>\n            <p className=\"detail-episode\">{`Episodes: ${episode.length}`}</p>\n            <div className=\"container__detail-img\">\n              <img src={image} alt={`Imagen de ${name}`} className=\"detail_img\"/> \n           </div> */}\n          </li>\n        </ul>\n      </Fragment>\n    );\n  \n};\n\n\n\n\nexport default PokeDetail;","import React from 'react';\nimport {getDataApi, getDataEvolution} from './services/Fetch';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport PokeDetail from './components/PokeDetail';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemons:[],\n      pokemonEvolution:[],\n      query:''\n    };\n    this.getUserquery =  this.getUserquery.bind(this);\n  }\n\n  componentDidMount(){\n    this.getPokemons();\n    this.getEvol();\n  }\n\n  getUserquery(event){\n    const gapText = event.currentTarget.value;\n\n    this.setState({\n      query:gapText\n    })\n  }\n\n  getPokemons(){\n    getDataApi()\n      .then(data => {\n        for(let pokemonList of data.results)\n    fetch(pokemonList.url)\n      .then(response => response.json())\n        .then(pokemonData => { \n          // console.log(pokemonData);\n          const arrTypes = [];\n            for(let pokemonType of pokemonData.types){\n              arrTypes.push(pokemonType.type.name)\n            }\n            \n          const pokemonInf = {\n            name:pokemonData.name,\n            image:pokemonData.sprites.front_default,\n            id:pokemonData.id,\n            types:arrTypes\n          };\n\n          this.setState({\n            pokemons: [...this.state.pokemons, pokemonInf]\n          });            \n\n        })  \n    });\n  }\n\n  getEvol (){\n    getDataEvolution()\n    .then(dataEvolutionPoke => {\n      for(let evolution of dataEvolutionPoke.results)\n      fetch(evolution.url)\n        .then(responseEvolPoke => responseEvolPoke.json())\n          .then(evolData =>{\n\n            const pokemonEvolutionData = {\n              id: evolData.id,\n              name: evolData.chain.species.name,\n              evolutionOne: evolData.chain.evolves_to[0].species.name,\n              // evolutionTwo: evolData.chain.evolves_to[0].evolves_to[0].species.name\n            };\n            // const newId = evolData.map((item,index) => {\n            //   return {...item, id:index};\n            // });\n\n            this.setState({\n              pokemonEvolution: pokemonEvolutionData\n            });   \n          })\n    })\n  }\n \n\n\n  render() {\n    const {pokemons,query, pokemonEvolution} = this.state;\n    console.log(pokemonEvolution);\n      return (\n        <div className=\"App\">\n          <header className=\"header\">\n            <h1 className=\"app__title\">TÃ­tulo app Pokemon</h1>\n          </header>\n          <Switch>\n            <Route exact path=\"/\" render = { () => {\n              return (\n                <Home \n                  getUserquery = {this.getUserquery}\n                  query = {query}\n                  pokemons = {pokemons}\n                  pokemonEvolution = {pokemonEvolution}\n                />\n                );\n              }}\n            />\n            <Route path=\"/poke-detail/:id\" render = {(routerProps) => {\n              return (\n                <PokeDetail\n             \n                routerProps = {routerProps}\n                pokemons = {pokemons}\n                pokemonEvolution = {pokemonEvolution}\n                />\n              );\n            }}\n            />\n          </Switch>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","const getUrl= \"https://pokeapi.co/api/v2/pokemon?limit=25\";\nconst getEvolution = \"http://pokeapi.salestock.net/api/v2/evolution-chain/\";\n\nconst getDataApi = () => {\n  return(\n    fetch(getUrl)\n      .then(response => response.json())\n  );\n};\n\nconst getDataEvolution = () => {\n  return(\n    fetch(getEvolution)\n      .then(responseEvol => responseEvol.json())\n  );\n};\n\nexport {getDataApi, getDataEvolution};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}