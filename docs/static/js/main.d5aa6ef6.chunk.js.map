{"version":3,"sources":["components/ListPokemons/CardPokemon/index.js","components/ListPokemons/index.js","components/Filters/index.js","App.js","services/Fetch.js","index.js"],"names":["CardPokemon","props","name","image","types","className","src","alt","ListPokemons","pokemons","query","filter","pokeName","toUpperCase","includes","map","pokemon","key","id","Filters","getUserquery","htmlFor","type","onChange","value","App","state","bind","this","getPokemons","event","gapText","currentTarget","setState","fetch","then","response","json","data","results","pokemonList","url","pokemonData","arrTypes","pokemonType","push","pokemonInf","sprites","front_default","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2VAceA,EAZK,SAAAC,GAAU,IACvBC,EAAoBD,EAApBC,KAAKC,EAAeF,EAAfE,MAAMC,EAASH,EAATG,MAChB,OACE,yBAAKC,UAAU,sBACb,uBAAGA,UAAU,cAAcH,GAC3B,yBAAKI,IAAKH,EAAOI,IAAKL,EAAMG,UAAU,cACtC,uBAAGA,UAAU,cAAb,UAA8BD,EAAM,GAApC,YAA0CA,EAAM,OCgBvCI,EApBM,SAAAP,GAAU,IACxBQ,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,MACf,OACE,wBAAIL,UAAU,iBACbI,EACEE,QAAO,SAAAC,GAAQ,OAAIA,EAASV,KAAKW,cAAcC,SAASJ,EAAMG,kBAC9DE,KAAI,SAAAC,GAAO,OACV,wBAAIX,UAAU,gBAAgBY,IAAKD,EAAQE,IACzC,kBAAC,EAAD,CACAhB,KAAQc,EAAQd,KAChBC,MAASa,EAAQb,MACjBC,MAASY,EAAQZ,cCHZe,EAVC,SAAAlB,GAAU,IACnBmB,EAAuBnB,EAAvBmB,aAAcV,EAAST,EAATS,MACnB,OACA,2BAAOW,QAAQ,cAAchB,UAAU,eACrC,2BAAOa,GAAI,cAAcI,KAAK,OAAOjB,UAAU,cAAckB,SAAUH,EAAcI,MAAOd,MCyFjFe,G,kBAvFb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDyB,MAAQ,CACXjB,SAAS,GACTC,MAAM,IAER,EAAKU,aAAgB,EAAKA,aAAaO,KAAlB,gBAPJ,E,iFAWjBC,KAAKC,gB,mCAGMC,GACX,IAAMC,EAAUD,EAAME,cAAcR,MAEpCI,KAAKK,SAAS,CACZvB,MAAMqB,M,oCAII,IAAD,OC1BPG,MAJM,8CAKHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UD2B5BF,MAAK,SAAAG,GAAS,IAAD,uBACX,IAAI,IAAJ,IAAuBA,EAAKC,QAA5B,oDAAQC,EAAR,QACPN,MAAMM,EAAYC,KACfN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACxBF,MAAK,SAAAO,GAEJ,IAAMC,EAAW,GAFE,uBAGjB,IAAI,IAAJ,IAAuBD,EAAYtC,MAAnC,+CAAyC,CAAC,IAAlCwC,EAAiC,QACvCD,EAASE,KAAKD,EAAYtB,KAAKpB,OAJhB,kFAOnB,IAAM4C,EAAa,CACjB5C,KAAKwC,EAAYxC,KACjBC,MAAMuC,EAAYK,QAAQC,cAC1B9B,GAAGwB,EAAYxB,GACfd,MAAMuC,GAGR,EAAKV,SAAS,CACZxB,SAAS,GAAD,mBAAM,EAAKiB,MAAMjB,UAAjB,CAA2BqC,UAnBzB,wF,+BAyCV,IAAD,EACkBlB,KAAKF,MAAvBjB,EADA,EACAA,SAASC,EADT,EACSA,MACd,OACE,yBAAKL,UAAU,OACb,4BAAQA,UAAU,UAChB,wBAAIA,UAAU,cAAd,0BAEF,kBAAC,EAAD,CACAe,aAAgBQ,KAAKR,aACrBV,MAASA,IAGT,kBAAC,EAAD,CACAD,SAAYA,EACZC,MAASA,S,GAhFDuC,IAAMC,YEDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d5aa6ef6.chunk.js","sourcesContent":["import React from 'react';\n\nconst CardPokemon = props => {\nconst {name,image,types} = props; \n  return(\n    <div className=\"container__pokemon\">\n      <p className=\"poke__name\">{name}</p>\n      <img src={image} alt={name} className=\"poke__img\"/>\n      <p className=\"poke__name\">{`${types[0]} ${types[1]}`}</p>\n    </div>\n);\n};\n\n\nexport default CardPokemon;","import React from 'react';\nimport CardPokemon from './CardPokemon';\n\n\nconst ListPokemons = props => {\nconst {pokemons, query} = props;\n  return (\n    <ul className=\"pokemon__list\">\n    {pokemons\n      .filter(pokeName =>(pokeName.name.toUpperCase().includes(query.toUpperCase())))\n      .map(pokemon =>(\n        <li className=\"pokemon__item\" key={pokemon.id}>\n          <CardPokemon\n          name = {pokemon.name}\n          image = {pokemon.image}\n          types = {pokemon.types}\n          />\n        </li>\n      ))\n    } \n    </ul>\n  )\n}; \n\nexport default ListPokemons;","import React from 'react';\n\nconst Filters = props => {\nconst {getUserquery, query} = props;  \n  return (\n  <label htmlFor=\"intro__name\" className=\"filter_name\"> \n    <input id= \"intro__name\" type=\"text\" className=\"intro__name\" onChange={getUserquery} value={query}/>\n  </label>  \n\n  );\n};\n\nexport default Filters;","import React from 'react';\nimport {getDataApi} from './services/Fetch';\nimport ListPokemons from './components/ListPokemons';\nimport Filters from './components/Filters';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pokemons:[],\n      query:''\n    };\n    this.getUserquery =  this.getUserquery.bind(this);\n  }\n\n  componentDidMount(){\n    this.getPokemons();\n  }\n\n  getUserquery(event){\n    const gapText = event.currentTarget.value;\n\n    this.setState({\n      query:gapText\n    })\n  }\n\n  getPokemons(){\n    getDataApi()\n        .then(data => {\n           for(let pokemonList of data.results)\n    fetch(pokemonList.url)\n      .then(response => response.json())\n        .then(pokemonData => { \n          // console.log(pokemonData);\n          const arrTypes = [];\n            for(let pokemonType of pokemonData.types){\n              arrTypes.push(pokemonType.type.name)\n            }\n            \n          const pokemonInf = {\n            name:pokemonData.name,\n            image:pokemonData.sprites.front_default,\n            id:pokemonData.id,\n            types:arrTypes\n          };\n\n          this.setState({\n            pokemons: [...this.state.pokemons, pokemonInf]\n          });            \n            //   function getName(pokemonType, name){\n            //     let getPokemonType= pokemonData.types;\n            //     if (pokemonType.indexOf(name)===-1){\n            //       arrTypes.push(name);\n            //       console.log('El pokemon es: ' + name);\n            //     } else if (pokemonType.indexOf(name) > -1){\n            //       console.log(name + ' ya existe este pokemon');\n            //     }\n            //   };\n            // let pokemonType = [];\n            // getName(pokemonType,'name');\n            // getName(pokemonType,'name');\n\n\n        })  \n    });\n  }\n \n\n\n  render() {\n    const {pokemons,query} = this.state;\n      return (\n        <div className=\"App\">\n          <header className=\"header\">\n            <h1 className=\"app__title\">TÃ­tulo app Pokemon</h1>\n          </header>\n          <Filters\n          getUserquery = {this.getUserquery}\n          query = {query}\n          />\n             \n          <ListPokemons\n          pokemons = {pokemons}\n          query = {query}\n          />\n      \n        </div>\n      );\n    }\n}\n\nexport default App;\n","const getUrl= \"https://pokeapi.co/api/v2/pokemon?limit=25\";\n\nconst getDataApi = () => {\n    return(\n        fetch(getUrl)\n          .then(response => response.json())\n    );\n};\n\nexport {getDataApi};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}